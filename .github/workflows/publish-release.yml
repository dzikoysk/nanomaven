on: workflow_dispatch

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - uses: actions/checkout@v3
      - name: Fetch git tags # Required for axion-release-plugin
        run: git fetch --tags --unshallow
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 18
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Release new version
        run: |
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'
          ./gradlew release
      - name: Get current version
        id: version
        run: echo "::set-output name=version::$(./gradlew -q -Prelease.quiet cV)"

  gradle:
    runs-on: ubuntu-latest
    needs: [ release ]
    steps:
      - uses: actions/checkout@v3
        with:
          ref: refs/tags/${{ needs.release.outputs.version }}
      - name: Fetch git tags # Required for axion-release-plugin
        run: git fetch --tags --unshallow
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 18
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Publish with Gradle
        run: ./gradlew :reposilite-backend:build :reposilite-backend:shadowJar :reposilite-backend:publish
        env:
          MAVEN_NAME: ${{ secrets.MAVEN_NAME }}
          MAVEN_TOKEN: ${{ secrets.MAVEN_TOKEN }}

  docker:
    runs-on: ubuntu-latest
    needs: [ release ]
    steps:
      - uses: actions/checkout@v3
        with:
          ref: refs/tags/${{ needs.release.outputs.version }}
      - name: Fetch git tags # Required for axion-release-plugin
        run: git fetch --tags --unshallow
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: dzikoysk/reposilite:${{ needs.release.outputs.version }}
          platforms: linux/amd64,linux/arm64